{"ast":null,"code":"import { Component, createElement } from 'react';\nimport { findDOMNode } from 'react-dom';\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * Check whether some DOM node is our Component's node.\n */\n\n\nfunction isNodeFound(current, componentNode, ignoreClass) {\n  if (current === componentNode) {\n    return true;\n  } // SVG <use/> elements do not technically reside in the rendered DOM, so\n  // they do not have classList directly, but they offer a link to their\n  // corresponding element, which can have classList. This extra check is for\n  // that case.\n  // See: http://www.w3.org/TR/SVG11/struct.html#InterfaceSVGUseElement\n  // Discussion: https://github.com/Pomax/react-onclickoutside/pull/17\n\n\n  if (current.correspondingElement) {\n    return current.correspondingElement.classList.contains(ignoreClass);\n  }\n\n  return current.classList.contains(ignoreClass);\n}\n/**\n * Try to find our node in a hierarchy of nodes, returning the document\n * node as highest node if our node is not found in the path up.\n */\n\n\nfunction findHighest(current, componentNode, ignoreClass) {\n  if (current === componentNode) {\n    return true;\n  } // If source=local then this event came from 'somewhere'\n  // inside and should be ignored. We could handle this with\n  // a layered approach, too, but that requires going back to\n  // thinking in terms of Dom node nesting, running counter\n  // to React's 'you shouldn't care about the DOM' philosophy.\n\n\n  while (current.parentNode) {\n    if (isNodeFound(current, componentNode, ignoreClass)) {\n      return true;\n    }\n\n    current = current.parentNode;\n  }\n\n  return current;\n}\n/**\n * Check if the browser scrollbar was clicked\n */\n\n\nfunction clickedScrollbar(evt) {\n  return document.documentElement.clientWidth <= evt.clientX || document.documentElement.clientHeight <= evt.clientY;\n} // ideally will get replaced with external dep\n// when rafrex/detect-passive-events#4 and rafrex/detect-passive-events#5 get merged in\n\n\nvar testPassiveEventSupport = function testPassiveEventSupport() {\n  if (typeof window === 'undefined' || typeof window.addEventListener !== 'function') {\n    return;\n  }\n\n  var passive = false;\n  var options = Object.defineProperty({}, 'passive', {\n    get: function get() {\n      passive = true;\n    }\n  });\n\n  var noop = function noop() {};\n\n  window.addEventListener('testPassiveEventSupport', noop, options);\n  window.removeEventListener('testPassiveEventSupport', noop, options);\n  return passive;\n};\n\nfunction autoInc(seed) {\n  if (seed === void 0) {\n    seed = 0;\n  }\n\n  return function () {\n    return ++seed;\n  };\n}\n\nvar uid = autoInc();\nvar passiveEventSupport;\nvar handlersMap = {};\nvar enabledInstances = {};\nvar touchEvents = ['touchstart', 'touchmove'];\nvar IGNORE_CLASS_NAME = 'ignore-react-onclickoutside';\n/**\n * Options for addEventHandler and removeEventHandler\n */\n\nfunction getEventHandlerOptions(instance, eventName) {\n  var handlerOptions = null;\n  var isTouchEvent = touchEvents.indexOf(eventName) !== -1;\n\n  if (isTouchEvent && passiveEventSupport) {\n    handlerOptions = {\n      passive: !instance.props.preventDefault\n    };\n  }\n\n  return handlerOptions;\n}\n/**\n * This function generates the HOC function that you'll use\n * in order to impart onOutsideClick listening to an\n * arbitrary component. It gets called at the end of the\n * bootstrapping code to yield an instance of the\n * onClickOutsideHOC function defined inside setupHOC().\n */\n\n\nfunction onClickOutsideHOC(WrappedComponent, config) {\n  var _class, _temp;\n\n  return _temp = _class = /*#__PURE__*/function (_Component) {\n    _inheritsLoose(onClickOutside, _Component);\n\n    function onClickOutside(props) {\n      var _this;\n\n      _this = _Component.call(this, props) || this;\n\n      _this.__outsideClickHandler = function (event) {\n        if (typeof _this.__clickOutsideHandlerProp === 'function') {\n          _this.__clickOutsideHandlerProp(event);\n\n          return;\n        }\n\n        var instance = _this.getInstance();\n\n        if (typeof instance.props.handleClickOutside === 'function') {\n          instance.props.handleClickOutside(event);\n          return;\n        }\n\n        if (typeof instance.handleClickOutside === 'function') {\n          instance.handleClickOutside(event);\n          return;\n        }\n\n        throw new Error('WrappedComponent lacks a handleClickOutside(event) function for processing outside click events.');\n      };\n\n      _this.enableOnClickOutside = function () {\n        if (typeof document === 'undefined' || enabledInstances[_this._uid]) {\n          return;\n        }\n\n        if (typeof passiveEventSupport === 'undefined') {\n          passiveEventSupport = testPassiveEventSupport();\n        }\n\n        enabledInstances[_this._uid] = true;\n        var events = _this.props.eventTypes;\n\n        if (!events.forEach) {\n          events = [events];\n        }\n\n        handlersMap[_this._uid] = function (event) {\n          if (_this.props.disableOnClickOutside) return;\n          if (_this.componentNode === null) return;\n\n          if (_this.props.preventDefault) {\n            event.preventDefault();\n          }\n\n          if (_this.props.stopPropagation) {\n            event.stopPropagation();\n          }\n\n          if (_this.props.excludeScrollbar && clickedScrollbar(event)) return;\n          var current = event.target;\n\n          if (findHighest(current, _this.componentNode, _this.props.outsideClickIgnoreClass) !== document) {\n            return;\n          }\n\n          _this.__outsideClickHandler(event);\n        };\n\n        events.forEach(function (eventName) {\n          document.addEventListener(eventName, handlersMap[_this._uid], getEventHandlerOptions(_this, eventName));\n        });\n      };\n\n      _this.disableOnClickOutside = function () {\n        delete enabledInstances[_this._uid];\n        var fn = handlersMap[_this._uid];\n\n        if (fn && typeof document !== 'undefined') {\n          var events = _this.props.eventTypes;\n\n          if (!events.forEach) {\n            events = [events];\n          }\n\n          events.forEach(function (eventName) {\n            return document.removeEventListener(eventName, fn, getEventHandlerOptions(_this, eventName));\n          });\n          delete handlersMap[_this._uid];\n        }\n      };\n\n      _this.getRef = function (ref) {\n        return _this.instanceRef = ref;\n      };\n\n      _this._uid = uid();\n      return _this;\n    }\n    /**\n     * Access the WrappedComponent's instance.\n     */\n\n\n    var _proto = onClickOutside.prototype;\n\n    _proto.getInstance = function getInstance() {\n      if (!WrappedComponent.prototype.isReactComponent) {\n        return this;\n      }\n\n      var ref = this.instanceRef;\n      return ref.getInstance ? ref.getInstance() : ref;\n    };\n    /**\n     * Add click listeners to the current document,\n     * linked to this component's state.\n     */\n\n\n    _proto.componentDidMount = function componentDidMount() {\n      // If we are in an environment without a DOM such\n      // as shallow rendering or snapshots then we exit\n      // early to prevent any unhandled errors being thrown.\n      if (typeof document === 'undefined' || !document.createElement) {\n        return;\n      }\n\n      var instance = this.getInstance();\n\n      if (config && typeof config.handleClickOutside === 'function') {\n        this.__clickOutsideHandlerProp = config.handleClickOutside(instance);\n\n        if (typeof this.__clickOutsideHandlerProp !== 'function') {\n          throw new Error('WrappedComponent lacks a function for processing outside click events specified by the handleClickOutside config option.');\n        }\n      }\n\n      this.componentNode = findDOMNode(this.getInstance());\n      this.enableOnClickOutside();\n    };\n\n    _proto.componentDidUpdate = function componentDidUpdate() {\n      this.componentNode = findDOMNode(this.getInstance());\n    };\n    /**\n     * Remove all document's event listeners for this component\n     */\n\n\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      this.disableOnClickOutside();\n    };\n    /**\n     * Can be called to explicitly enable event listening\n     * for clicks and touches outside of this element.\n     */\n\n    /**\n     * Pass-through render\n     */\n\n\n    _proto.render = function render() {\n      // eslint-disable-next-line no-unused-vars\n      var _props = this.props,\n          excludeScrollbar = _props.excludeScrollbar,\n          props = _objectWithoutProperties(_props, [\"excludeScrollbar\"]);\n\n      if (WrappedComponent.prototype.isReactComponent) {\n        props.ref = this.getRef;\n      } else {\n        props.wrappedRef = this.getRef;\n      }\n\n      props.disableOnClickOutside = this.disableOnClickOutside;\n      props.enableOnClickOutside = this.enableOnClickOutside;\n      return createElement(WrappedComponent, props);\n    };\n\n    return onClickOutside;\n  }(Component), _class.displayName = \"OnClickOutside(\" + (WrappedComponent.displayName || WrappedComponent.name || 'Component') + \")\", _class.defaultProps = {\n    eventTypes: ['mousedown', 'touchstart'],\n    excludeScrollbar: config && config.excludeScrollbar || false,\n    outsideClickIgnoreClass: IGNORE_CLASS_NAME,\n    preventDefault: false,\n    stopPropagation: false\n  }, _class.getClass = function () {\n    return WrappedComponent.getClass ? WrappedComponent.getClass() : WrappedComponent;\n  }, _temp;\n}\n\nexport { IGNORE_CLASS_NAME };\nexport default onClickOutsideHOC;","map":{"version":3,"sources":["C:/Users/Administrator/.git/asdf/Source Files/node_modules/react-onclickoutside/dist/react-onclickoutside.es.js"],"names":["Component","createElement","findDOMNode","_inheritsLoose","subClass","superClass","prototype","Object","create","constructor","__proto__","_objectWithoutProperties","source","excluded","target","sourceKeys","keys","key","i","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","call","isNodeFound","current","componentNode","ignoreClass","correspondingElement","classList","contains","findHighest","parentNode","clickedScrollbar","evt","document","documentElement","clientWidth","clientX","clientHeight","clientY","testPassiveEventSupport","window","addEventListener","passive","options","defineProperty","get","noop","removeEventListener","autoInc","seed","uid","passiveEventSupport","handlersMap","enabledInstances","touchEvents","IGNORE_CLASS_NAME","getEventHandlerOptions","instance","eventName","handlerOptions","isTouchEvent","props","preventDefault","onClickOutsideHOC","WrappedComponent","config","_class","_temp","_Component","onClickOutside","_this","__outsideClickHandler","event","__clickOutsideHandlerProp","getInstance","handleClickOutside","Error","enableOnClickOutside","_uid","events","eventTypes","forEach","disableOnClickOutside","stopPropagation","excludeScrollbar","outsideClickIgnoreClass","fn","getRef","ref","instanceRef","_proto","isReactComponent","componentDidMount","componentDidUpdate","componentWillUnmount","render","_props","wrappedRef","displayName","name","defaultProps","getClass"],"mappings":"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","sourcesContent":["import { Component, createElement } from 'react';\nimport { findDOMNode } from 'react-dom';\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\n/**\n * Check whether some DOM node is our Component's node.\n */\nfunction isNodeFound(current, componentNode, ignoreClass) {\n  if (current === componentNode) {\n    return true;\n  } // SVG <use/> elements do not technically reside in the rendered DOM, so\n  // they do not have classList directly, but they offer a link to their\n  // corresponding element, which can have classList. This extra check is for\n  // that case.\n  // See: http://www.w3.org/TR/SVG11/struct.html#InterfaceSVGUseElement\n  // Discussion: https://github.com/Pomax/react-onclickoutside/pull/17\n\n\n  if (current.correspondingElement) {\n    return current.correspondingElement.classList.contains(ignoreClass);\n  }\n\n  return current.classList.contains(ignoreClass);\n}\n/**\n * Try to find our node in a hierarchy of nodes, returning the document\n * node as highest node if our node is not found in the path up.\n */\n\nfunction findHighest(current, componentNode, ignoreClass) {\n  if (current === componentNode) {\n    return true;\n  } // If source=local then this event came from 'somewhere'\n  // inside and should be ignored. We could handle this with\n  // a layered approach, too, but that requires going back to\n  // thinking in terms of Dom node nesting, running counter\n  // to React's 'you shouldn't care about the DOM' philosophy.\n\n\n  while (current.parentNode) {\n    if (isNodeFound(current, componentNode, ignoreClass)) {\n      return true;\n    }\n\n    current = current.parentNode;\n  }\n\n  return current;\n}\n/**\n * Check if the browser scrollbar was clicked\n */\n\nfunction clickedScrollbar(evt) {\n  return document.documentElement.clientWidth <= evt.clientX || document.documentElement.clientHeight <= evt.clientY;\n}\n\n// ideally will get replaced with external dep\n// when rafrex/detect-passive-events#4 and rafrex/detect-passive-events#5 get merged in\nvar testPassiveEventSupport = function testPassiveEventSupport() {\n  if (typeof window === 'undefined' || typeof window.addEventListener !== 'function') {\n    return;\n  }\n\n  var passive = false;\n  var options = Object.defineProperty({}, 'passive', {\n    get: function get() {\n      passive = true;\n    }\n  });\n\n  var noop = function noop() {};\n\n  window.addEventListener('testPassiveEventSupport', noop, options);\n  window.removeEventListener('testPassiveEventSupport', noop, options);\n  return passive;\n};\n\nfunction autoInc(seed) {\n  if (seed === void 0) {\n    seed = 0;\n  }\n\n  return function () {\n    return ++seed;\n  };\n}\n\nvar uid = autoInc();\n\nvar passiveEventSupport;\nvar handlersMap = {};\nvar enabledInstances = {};\nvar touchEvents = ['touchstart', 'touchmove'];\nvar IGNORE_CLASS_NAME = 'ignore-react-onclickoutside';\n/**\n * Options for addEventHandler and removeEventHandler\n */\n\nfunction getEventHandlerOptions(instance, eventName) {\n  var handlerOptions = null;\n  var isTouchEvent = touchEvents.indexOf(eventName) !== -1;\n\n  if (isTouchEvent && passiveEventSupport) {\n    handlerOptions = {\n      passive: !instance.props.preventDefault\n    };\n  }\n\n  return handlerOptions;\n}\n/**\n * This function generates the HOC function that you'll use\n * in order to impart onOutsideClick listening to an\n * arbitrary component. It gets called at the end of the\n * bootstrapping code to yield an instance of the\n * onClickOutsideHOC function defined inside setupHOC().\n */\n\n\nfunction onClickOutsideHOC(WrappedComponent, config) {\n  var _class, _temp;\n\n  return _temp = _class =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(onClickOutside, _Component);\n\n    function onClickOutside(props) {\n      var _this;\n\n      _this = _Component.call(this, props) || this;\n\n      _this.__outsideClickHandler = function (event) {\n        if (typeof _this.__clickOutsideHandlerProp === 'function') {\n          _this.__clickOutsideHandlerProp(event);\n\n          return;\n        }\n\n        var instance = _this.getInstance();\n\n        if (typeof instance.props.handleClickOutside === 'function') {\n          instance.props.handleClickOutside(event);\n          return;\n        }\n\n        if (typeof instance.handleClickOutside === 'function') {\n          instance.handleClickOutside(event);\n          return;\n        }\n\n        throw new Error('WrappedComponent lacks a handleClickOutside(event) function for processing outside click events.');\n      };\n\n      _this.enableOnClickOutside = function () {\n        if (typeof document === 'undefined' || enabledInstances[_this._uid]) {\n          return;\n        }\n\n        if (typeof passiveEventSupport === 'undefined') {\n          passiveEventSupport = testPassiveEventSupport();\n        }\n\n        enabledInstances[_this._uid] = true;\n        var events = _this.props.eventTypes;\n\n        if (!events.forEach) {\n          events = [events];\n        }\n\n        handlersMap[_this._uid] = function (event) {\n          if (_this.props.disableOnClickOutside) return;\n          if (_this.componentNode === null) return;\n\n          if (_this.props.preventDefault) {\n            event.preventDefault();\n          }\n\n          if (_this.props.stopPropagation) {\n            event.stopPropagation();\n          }\n\n          if (_this.props.excludeScrollbar && clickedScrollbar(event)) return;\n          var current = event.target;\n\n          if (findHighest(current, _this.componentNode, _this.props.outsideClickIgnoreClass) !== document) {\n            return;\n          }\n\n          _this.__outsideClickHandler(event);\n        };\n\n        events.forEach(function (eventName) {\n          document.addEventListener(eventName, handlersMap[_this._uid], getEventHandlerOptions(_this, eventName));\n        });\n      };\n\n      _this.disableOnClickOutside = function () {\n        delete enabledInstances[_this._uid];\n        var fn = handlersMap[_this._uid];\n\n        if (fn && typeof document !== 'undefined') {\n          var events = _this.props.eventTypes;\n\n          if (!events.forEach) {\n            events = [events];\n          }\n\n          events.forEach(function (eventName) {\n            return document.removeEventListener(eventName, fn, getEventHandlerOptions(_this, eventName));\n          });\n          delete handlersMap[_this._uid];\n        }\n      };\n\n      _this.getRef = function (ref) {\n        return _this.instanceRef = ref;\n      };\n\n      _this._uid = uid();\n      return _this;\n    }\n    /**\n     * Access the WrappedComponent's instance.\n     */\n\n\n    var _proto = onClickOutside.prototype;\n\n    _proto.getInstance = function getInstance() {\n      if (!WrappedComponent.prototype.isReactComponent) {\n        return this;\n      }\n\n      var ref = this.instanceRef;\n      return ref.getInstance ? ref.getInstance() : ref;\n    };\n\n    /**\n     * Add click listeners to the current document,\n     * linked to this component's state.\n     */\n    _proto.componentDidMount = function componentDidMount() {\n      // If we are in an environment without a DOM such\n      // as shallow rendering or snapshots then we exit\n      // early to prevent any unhandled errors being thrown.\n      if (typeof document === 'undefined' || !document.createElement) {\n        return;\n      }\n\n      var instance = this.getInstance();\n\n      if (config && typeof config.handleClickOutside === 'function') {\n        this.__clickOutsideHandlerProp = config.handleClickOutside(instance);\n\n        if (typeof this.__clickOutsideHandlerProp !== 'function') {\n          throw new Error('WrappedComponent lacks a function for processing outside click events specified by the handleClickOutside config option.');\n        }\n      }\n\n      this.componentNode = findDOMNode(this.getInstance());\n      this.enableOnClickOutside();\n    };\n\n    _proto.componentDidUpdate = function componentDidUpdate() {\n      this.componentNode = findDOMNode(this.getInstance());\n    };\n    /**\n     * Remove all document's event listeners for this component\n     */\n\n\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      this.disableOnClickOutside();\n    };\n    /**\n     * Can be called to explicitly enable event listening\n     * for clicks and touches outside of this element.\n     */\n\n\n    /**\n     * Pass-through render\n     */\n    _proto.render = function render() {\n      // eslint-disable-next-line no-unused-vars\n      var _props = this.props,\n          excludeScrollbar = _props.excludeScrollbar,\n          props = _objectWithoutProperties(_props, [\"excludeScrollbar\"]);\n\n      if (WrappedComponent.prototype.isReactComponent) {\n        props.ref = this.getRef;\n      } else {\n        props.wrappedRef = this.getRef;\n      }\n\n      props.disableOnClickOutside = this.disableOnClickOutside;\n      props.enableOnClickOutside = this.enableOnClickOutside;\n      return createElement(WrappedComponent, props);\n    };\n\n    return onClickOutside;\n  }(Component), _class.displayName = \"OnClickOutside(\" + (WrappedComponent.displayName || WrappedComponent.name || 'Component') + \")\", _class.defaultProps = {\n    eventTypes: ['mousedown', 'touchstart'],\n    excludeScrollbar: config && config.excludeScrollbar || false,\n    outsideClickIgnoreClass: IGNORE_CLASS_NAME,\n    preventDefault: false,\n    stopPropagation: false\n  }, _class.getClass = function () {\n    return WrappedComponent.getClass ? WrappedComponent.getClass() : WrappedComponent;\n  }, _temp;\n}\n\nexport { IGNORE_CLASS_NAME };\nexport default onClickOutsideHOC;\n"]},"metadata":{},"sourceType":"module"}