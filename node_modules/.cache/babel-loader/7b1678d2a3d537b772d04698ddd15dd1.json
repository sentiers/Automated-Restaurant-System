{"ast":null,"code":"'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = function (Chart) {\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function () {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  Chart.DatasetController = function (chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers.extend(Chart.DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function (chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function (datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function () {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function () {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function () {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function (scaleID) {\n      return this.chart.scales[scaleID];\n    },\n    reset: function () {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function () {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function () {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function (index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function () {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function (index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function () {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        listenArrayEvents(data, me);\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers.noop,\n    transition: function (easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function () {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function (element) {\n      helpers.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function (element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var getHoverColor = helpers.getHoverColor;\n      var model = element._model;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function () {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function (start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function () {\n      this.insertElements(this.getDataset().data.length - 1, arguments.length);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function () {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function () {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function (start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function () {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  Chart.DatasetController.extend = helpers.inherits;\n};","map":{"version":3,"sources":["C:/Users/Administrator/.git/asdf/Source Files/node_modules/chart.js/src/core/core.datasetController.js"],"names":["helpers","require","module","exports","Chart","arrayEvents","listenArrayEvents","array","listener","_chartjs","listeners","push","Object","defineProperty","configurable","enumerable","value","forEach","key","method","charAt","toUpperCase","slice","base","args","Array","prototype","call","arguments","res","apply","each","object","unlistenArrayEvents","stub","index","indexOf","splice","length","DatasetController","chart","datasetIndex","initialize","extend","datasetElementType","dataElementType","me","linkScales","addElements","updateIndex","meta","getMeta","dataset","getDataset","xAxisID","scales","options","xAxes","id","yAxisID","yAxes","data","datasets","getDatasetMeta","getScaleForId","scaleID","reset","update","destroy","_data","createMetaDataset","type","_chart","_datasetIndex","createMetaData","_index","metaData","i","ilen","addElementAndReset","element","updateElement","buildOrUpdateElements","resyncElements","noop","transition","easingValue","elements","draw","removeHoverStyle","merge","_model","$previousStyle","setHoverStyle","custom","valueOrDefault","valueAtIndexOrDefault","getHoverColor","model","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","start","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","inherits"],"mappings":"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","sourcesContent":["'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = function(Chart) {\n\n\tvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n\t/**\n\t * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n\t * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n\t * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n\t */\n\tfunction listenArrayEvents(array, listener) {\n\t\tif (array._chartjs) {\n\t\t\tarray._chartjs.listeners.push(listener);\n\t\t\treturn;\n\t\t}\n\n\t\tObject.defineProperty(array, '_chartjs', {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: {\n\t\t\t\tlisteners: [listener]\n\t\t\t}\n\t\t});\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n\t\t\tvar base = array[key];\n\n\t\t\tObject.defineProperty(array, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: function() {\n\t\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\t\tvar res = base.apply(this, args);\n\n\t\t\t\t\thelpers.each(array._chartjs.listeners, function(object) {\n\t\t\t\t\t\tif (typeof object[method] === 'function') {\n\t\t\t\t\t\t\tobject[method].apply(object, args);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Removes the given array event listener and cleanup extra attached properties (such as\n\t * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n\t */\n\tfunction unlistenArrayEvents(array, listener) {\n\t\tvar stub = array._chartjs;\n\t\tif (!stub) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar listeners = stub.listeners;\n\t\tvar index = listeners.indexOf(listener);\n\t\tif (index !== -1) {\n\t\t\tlisteners.splice(index, 1);\n\t\t}\n\n\t\tif (listeners.length > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tdelete array[key];\n\t\t});\n\n\t\tdelete array._chartjs;\n\t}\n\n\t// Base class for all dataset controllers (line, bar, etc)\n\tChart.DatasetController = function(chart, datasetIndex) {\n\t\tthis.initialize(chart, datasetIndex);\n\t};\n\n\thelpers.extend(Chart.DatasetController.prototype, {\n\n\t\t/**\n\t\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdatasetElementType: null,\n\n\t\t/**\n\t\t * Element type used to generate a meta data (e.g. Chart.element.Point).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdataElementType: null,\n\n\t\tinitialize: function(chart, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tme.chart = chart;\n\t\t\tme.index = datasetIndex;\n\t\t\tme.linkScales();\n\t\t\tme.addElements();\n\t\t},\n\n\t\tupdateIndex: function(datasetIndex) {\n\t\t\tthis.index = datasetIndex;\n\t\t},\n\n\t\tlinkScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\n\t\t\tif (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n\t\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n\t\t\t}\n\t\t\tif (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n\t\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n\t\t\t}\n\t\t},\n\n\t\tgetDataset: function() {\n\t\t\treturn this.chart.data.datasets[this.index];\n\t\t},\n\n\t\tgetMeta: function() {\n\t\t\treturn this.chart.getDatasetMeta(this.index);\n\t\t},\n\n\t\tgetScaleForId: function(scaleID) {\n\t\t\treturn this.chart.scales[scaleID];\n\t\t},\n\n\t\treset: function() {\n\t\t\tthis.update(true);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroy: function() {\n\t\t\tif (this._data) {\n\t\t\t\tunlistenArrayEvents(this._data, this);\n\t\t\t}\n\t\t},\n\n\t\tcreateMetaDataset: function() {\n\t\t\tvar me = this;\n\t\t\tvar type = me.datasetElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index\n\t\t\t});\n\t\t},\n\n\t\tcreateMetaData: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar type = me.dataElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index\n\t\t\t});\n\t\t},\n\n\t\taddElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data || [];\n\t\t\tvar metaData = meta.data;\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = data.length; i < ilen; ++i) {\n\t\t\t\tmetaData[i] = metaData[i] || me.createMetaData(i);\n\t\t\t}\n\n\t\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\n\t\t},\n\n\t\taddElementAndReset: function(index) {\n\t\t\tvar element = this.createMetaData(index);\n\t\t\tthis.getMeta().data.splice(index, 0, element);\n\t\t\tthis.updateElement(element, index, true);\n\t\t},\n\n\t\tbuildOrUpdateElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar data = dataset.data || (dataset.data = []);\n\n\t\t\t// In order to correctly handle data addition/deletion animation (an thus simulate\n\t\t\t// real-time charts), we need to monitor these data modifications and synchronize\n\t\t\t// the internal meta data accordingly.\n\t\t\tif (me._data !== data) {\n\t\t\t\tif (me._data) {\n\t\t\t\t\t// This case happens when the user replaced the data array instance.\n\t\t\t\t\tunlistenArrayEvents(me._data, me);\n\t\t\t\t}\n\n\t\t\t\tlistenArrayEvents(data, me);\n\t\t\t\tme._data = data;\n\t\t\t}\n\n\t\t\t// Re-sync meta data in case the user replaced the data array or if we missed\n\t\t\t// any updates and so make sure that we handle number of datapoints changing.\n\t\t\tme.resyncElements();\n\t\t},\n\n\t\tupdate: helpers.noop,\n\n\t\ttransition: function(easingValue) {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].transition(easingValue);\n\t\t\t}\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.transition(easingValue);\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.draw();\n\t\t\t}\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].draw();\n\t\t\t}\n\t\t},\n\n\t\tremoveHoverStyle: function(element) {\n\t\t\thelpers.merge(element._model, element.$previousStyle || {});\n\t\t\tdelete element.$previousStyle;\n\t\t},\n\n\t\tsetHoverStyle: function(element) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar getHoverColor = helpers.getHoverColor;\n\t\t\tvar model = element._model;\n\n\t\t\telement.$previousStyle = {\n\t\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\t\tborderColor: model.borderColor,\n\t\t\t\tborderWidth: model.borderWidth\n\t\t\t};\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tresyncElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data;\n\t\t\tvar numMeta = meta.data.length;\n\t\t\tvar numData = data.length;\n\n\t\t\tif (numData < numMeta) {\n\t\t\t\tmeta.data.splice(numData, numMeta - numData);\n\t\t\t} else if (numData > numMeta) {\n\t\t\t\tme.insertElements(numMeta, numData - numMeta);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinsertElements: function(start, count) {\n\t\t\tfor (var i = 0; i < count; ++i) {\n\t\t\t\tthis.addElementAndReset(start + i);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPush: function() {\n\t\t\tthis.insertElements(this.getDataset().data.length - 1, arguments.length);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPop: function() {\n\t\t\tthis.getMeta().data.pop();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataShift: function() {\n\t\t\tthis.getMeta().data.shift();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataSplice: function(start, count) {\n\t\t\tthis.getMeta().data.splice(start, count);\n\t\t\tthis.insertElements(start, arguments.length - 2);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataUnshift: function() {\n\t\t\tthis.insertElements(0, arguments.length);\n\t\t}\n\t});\n\n\tChart.DatasetController.extend = helpers.inherits;\n};\n"]},"metadata":{},"sourceType":"script"}