{"ast":null,"code":"'use strict';\n/**\n * @namespace Chart.helpers\n */\n\nvar helpers = {\n  /**\n   * An empty function that can be used, for example, for optional callback.\n   */\n  noop: function () {},\n\n  /**\n   * Returns a unique id, sequentially generated from a global variable.\n   * @returns {Number}\n   * @function\n   */\n  uid: function () {\n    var id = 0;\n    return function () {\n      return id++;\n    };\n  }(),\n\n  /**\n   * Returns true if `value` is neither null nor undefined, else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @since 2.7.0\n   */\n  isNullOrUndef: function (value) {\n    return value === null || typeof value === 'undefined';\n  },\n\n  /**\n   * Returns true if `value` is an array, else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @function\n   */\n  isArray: Array.isArray ? Array.isArray : function (value) {\n    return Object.prototype.toString.call(value) === '[object Array]';\n  },\n\n  /**\n   * Returns true if `value` is an object (excluding null), else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @since 2.7.0\n   */\n  isObject: function (value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n  },\n\n  /**\n   * Returns `value` if defined, else returns `defaultValue`.\n   * @param {*} value - The value to return if defined.\n   * @param {*} defaultValue - The value to return if `value` is undefined.\n   * @returns {*}\n   */\n  valueOrDefault: function (value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n  },\n\n  /**\n   * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n   * @param {Array} value - The array to lookup for value at `index`.\n   * @param {Number} index - The index in `value` to lookup for value.\n   * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n   * @returns {*}\n   */\n  valueAtIndexOrDefault: function (value, index, defaultValue) {\n    return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n  },\n\n  /**\n   * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n   * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n   * @param {Function} fn - The function to call.\n   * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n   * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n   * @returns {*}\n   */\n  callback: function (fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n      return fn.apply(thisArg, args);\n    }\n  },\n\n  /**\n   * Note(SB) for performance sake, this method should only be used when loopable type\n   * is unknown or in none intensive code (not called often and small loopable). Else\n   * it's preferable to use a regular for() loop and save extra function calls.\n   * @param {Object|Array} loopable - The object or array to be iterated.\n   * @param {Function} fn - The function to call for each item.\n   * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n   * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\n   */\n  each: function (loopable, fn, thisArg, reverse) {\n    var i, len, keys;\n\n    if (helpers.isArray(loopable)) {\n      len = loopable.length;\n\n      if (reverse) {\n        for (i = len - 1; i >= 0; i--) {\n          fn.call(thisArg, loopable[i], i);\n        }\n      } else {\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[i], i);\n        }\n      }\n    } else if (helpers.isObject(loopable)) {\n      keys = Object.keys(loopable);\n      len = keys.length;\n\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[keys[i]], keys[i]);\n      }\n    }\n  },\n\n  /**\n   * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n   * @see http://stackoverflow.com/a/14853974\n   * @param {Array} a0 - The array to compare\n   * @param {Array} a1 - The array to compare\n   * @returns {Boolean}\n   */\n  arrayEquals: function (a0, a1) {\n    var i, ilen, v0, v1;\n\n    if (!a0 || !a1 || a0.length !== a1.length) {\n      return false;\n    }\n\n    for (i = 0, ilen = a0.length; i < ilen; ++i) {\n      v0 = a0[i];\n      v1 = a1[i];\n\n      if (v0 instanceof Array && v1 instanceof Array) {\n        if (!helpers.arrayEquals(v0, v1)) {\n          return false;\n        }\n      } else if (v0 !== v1) {\n        // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n        return false;\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * Returns a deep copy of `source` without keeping references on objects and arrays.\n   * @param {*} source - The value to clone.\n   * @returns {*}\n   */\n  clone: function (source) {\n    if (helpers.isArray(source)) {\n      return source.map(helpers.clone);\n    }\n\n    if (helpers.isObject(source)) {\n      var target = {};\n      var keys = Object.keys(source);\n      var klen = keys.length;\n      var k = 0;\n\n      for (; k < klen; ++k) {\n        target[keys[k]] = helpers.clone(source[keys[k]]);\n      }\n\n      return target;\n    }\n\n    return source;\n  },\n\n  /**\n   * The default merger when Chart.helpers.merge is called without merger option.\n   * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\n   * @private\n   */\n  _merger: function (key, target, source, options) {\n    var tval = target[key];\n    var sval = source[key];\n\n    if (helpers.isObject(tval) && helpers.isObject(sval)) {\n      helpers.merge(tval, sval, options);\n    } else {\n      target[key] = helpers.clone(sval);\n    }\n  },\n\n  /**\n   * Merges source[key] in target[key] only if target[key] is undefined.\n   * @private\n   */\n  _mergerIf: function (key, target, source) {\n    var tval = target[key];\n    var sval = source[key];\n\n    if (helpers.isObject(tval) && helpers.isObject(sval)) {\n      helpers.mergeIf(tval, sval);\n    } else if (!target.hasOwnProperty(key)) {\n      target[key] = helpers.clone(sval);\n    }\n  },\n\n  /**\n   * Recursively deep copies `source` properties into `target` with the given `options`.\n   * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n   * @param {Object} target - The target object in which all sources are merged into.\n   * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n   * @param {Object} [options] - Merging options:\n   * @param {Function} [options.merger] - The merge method (key, target, source, options)\n   * @returns {Object} The `target` object.\n   */\n  merge: function (target, source, options) {\n    var sources = helpers.isArray(source) ? source : [source];\n    var ilen = sources.length;\n    var merge, i, keys, klen, k;\n\n    if (!helpers.isObject(target)) {\n      return target;\n    }\n\n    options = options || {};\n    merge = options.merger || helpers._merger;\n\n    for (i = 0; i < ilen; ++i) {\n      source = sources[i];\n\n      if (!helpers.isObject(source)) {\n        continue;\n      }\n\n      keys = Object.keys(source);\n\n      for (k = 0, klen = keys.length; k < klen; ++k) {\n        merge(keys[k], target, source, options);\n      }\n    }\n\n    return target;\n  },\n\n  /**\n   * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n   * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n   * @param {Object} target - The target object in which all sources are merged into.\n   * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n   * @returns {Object} The `target` object.\n   */\n  mergeIf: function (target, source) {\n    return helpers.merge(target, source, {\n      merger: helpers._mergerIf\n    });\n  },\n\n  /**\n   * Applies the contents of two or more objects together into the first object.\n   * @param {Object} target - The target object in which all objects are merged into.\n   * @param {Object} arg1 - Object containing additional properties to merge in target.\n   * @param {Object} argN - Additional objects containing properties to merge in target.\n   * @returns {Object} The `target` object.\n   */\n  extend: function (target) {\n    var setFn = function (value, key) {\n      target[key] = value;\n    };\n\n    for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n      helpers.each(arguments[i], setFn);\n    }\n\n    return target;\n  },\n\n  /**\n   * Basic javascript inheritance based on the model created in Backbone.js\n   */\n  inherits: function (extensions) {\n    var me = this;\n    var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n      return me.apply(this, arguments);\n    };\n\n    var Surrogate = function () {\n      this.constructor = ChartElement;\n    };\n\n    Surrogate.prototype = me.prototype;\n    ChartElement.prototype = new Surrogate();\n    ChartElement.extend = helpers.inherits;\n\n    if (extensions) {\n      helpers.extend(ChartElement.prototype, extensions);\n    }\n\n    ChartElement.__super__ = me.prototype;\n    return ChartElement;\n  }\n};\nmodule.exports = helpers; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.callCallback = helpers.callback;\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.indexOf = function (array, item, fromIndex) {\n  return Array.prototype.indexOf.call(array, item, fromIndex);\n};\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\n\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;","map":{"version":3,"sources":["C:/Users/Administrator/.git/asdf/Source Files/node_modules/chart.js/src/helpers/helpers.core.js"],"names":["helpers","noop","uid","id","isNullOrUndef","value","isArray","Array","Object","prototype","toString","call","isObject","valueOrDefault","defaultValue","valueAtIndexOrDefault","index","callback","fn","args","thisArg","apply","each","loopable","reverse","i","len","keys","length","arrayEquals","a0","a1","ilen","v0","v1","clone","source","map","target","klen","k","_merger","key","options","tval","sval","merge","_mergerIf","mergeIf","hasOwnProperty","sources","merger","extend","setFn","arguments","inherits","extensions","me","ChartElement","constructor","Surrogate","__super__","module","exports","callCallback","indexOf","array","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault"],"mappings":"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","sourcesContent":["'use strict';\n\n/**\n * @namespace Chart.helpers\n */\nvar helpers = {\n\t/**\n\t * An empty function that can be used, for example, for optional callback.\n\t */\n\tnoop: function() {},\n\n\t/**\n\t * Returns a unique id, sequentially generated from a global variable.\n\t * @returns {Number}\n\t * @function\n\t */\n\tuid: (function() {\n\t\tvar id = 0;\n\t\treturn function() {\n\t\t\treturn id++;\n\t\t};\n\t}()),\n\n\t/**\n\t * Returns true if `value` is neither null nor undefined, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisNullOrUndef: function(value) {\n\t\treturn value === null || typeof value === 'undefined';\n\t},\n\n\t/**\n\t * Returns true if `value` is an array, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @function\n\t */\n\tisArray: Array.isArray ? Array.isArray : function(value) {\n\t\treturn Object.prototype.toString.call(value) === '[object Array]';\n\t},\n\n\t/**\n\t * Returns true if `value` is an object (excluding null), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisObject: function(value) {\n\t\treturn value !== null && Object.prototype.toString.call(value) === '[object Object]';\n\t},\n\n\t/**\n\t * Returns `value` if defined, else returns `defaultValue`.\n\t * @param {*} value - The value to return if defined.\n\t * @param {*} defaultValue - The value to return if `value` is undefined.\n\t * @returns {*}\n\t */\n\tvalueOrDefault: function(value, defaultValue) {\n\t\treturn typeof value === 'undefined' ? defaultValue : value;\n\t},\n\n\t/**\n\t * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n\t * @param {Array} value - The array to lookup for value at `index`.\n\t * @param {Number} index - The index in `value` to lookup for value.\n\t * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n\t * @returns {*}\n\t */\n\tvalueAtIndexOrDefault: function(value, index, defaultValue) {\n\t\treturn helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n\t},\n\n\t/**\n\t * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n\t * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n\t * @param {Function} fn - The function to call.\n\t * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @returns {*}\n\t */\n\tcallback: function(fn, args, thisArg) {\n\t\tif (fn && typeof fn.call === 'function') {\n\t\t\treturn fn.apply(thisArg, args);\n\t\t}\n\t},\n\n\t/**\n\t * Note(SB) for performance sake, this method should only be used when loopable type\n\t * is unknown or in none intensive code (not called often and small loopable). Else\n\t * it's preferable to use a regular for() loop and save extra function calls.\n\t * @param {Object|Array} loopable - The object or array to be iterated.\n\t * @param {Function} fn - The function to call for each item.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\n\t */\n\teach: function(loopable, fn, thisArg, reverse) {\n\t\tvar i, len, keys;\n\t\tif (helpers.isArray(loopable)) {\n\t\t\tlen = loopable.length;\n\t\t\tif (reverse) {\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (helpers.isObject(loopable)) {\n\t\t\tkeys = Object.keys(loopable);\n\t\t\tlen = keys.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tfn.call(thisArg, loopable[keys[i]], keys[i]);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n\t * @see http://stackoverflow.com/a/14853974\n\t * @param {Array} a0 - The array to compare\n\t * @param {Array} a1 - The array to compare\n\t * @returns {Boolean}\n\t */\n\tarrayEquals: function(a0, a1) {\n\t\tvar i, ilen, v0, v1;\n\n\t\tif (!a0 || !a1 || a0.length !== a1.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (i = 0, ilen = a0.length; i < ilen; ++i) {\n\t\t\tv0 = a0[i];\n\t\t\tv1 = a1[i];\n\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (v0 !== v1) {\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns a deep copy of `source` without keeping references on objects and arrays.\n\t * @param {*} source - The value to clone.\n\t * @returns {*}\n\t */\n\tclone: function(source) {\n\t\tif (helpers.isArray(source)) {\n\t\t\treturn source.map(helpers.clone);\n\t\t}\n\n\t\tif (helpers.isObject(source)) {\n\t\t\tvar target = {};\n\t\t\tvar keys = Object.keys(source);\n\t\t\tvar klen = keys.length;\n\t\t\tvar k = 0;\n\n\t\t\tfor (; k < klen; ++k) {\n\t\t\t\ttarget[keys[k]] = helpers.clone(source[keys[k]]);\n\t\t\t}\n\n\t\t\treturn target;\n\t\t}\n\n\t\treturn source;\n\t},\n\n\t/**\n\t * The default merger when Chart.helpers.merge is called without merger option.\n\t * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\n\t * @private\n\t */\n\t_merger: function(key, target, source, options) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.merge(tval, sval, options);\n\t\t} else {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Merges source[key] in target[key] only if target[key] is undefined.\n\t * @private\n\t */\n\t_mergerIf: function(key, target, source) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.mergeIf(tval, sval);\n\t\t} else if (!target.hasOwnProperty(key)) {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` with the given `options`.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @param {Object} [options] - Merging options:\n\t * @param {Function} [options.merger] - The merge method (key, target, source, options)\n\t * @returns {Object} The `target` object.\n\t */\n\tmerge: function(target, source, options) {\n\t\tvar sources = helpers.isArray(source) ? source : [source];\n\t\tvar ilen = sources.length;\n\t\tvar merge, i, keys, klen, k;\n\n\t\tif (!helpers.isObject(target)) {\n\t\t\treturn target;\n\t\t}\n\n\t\toptions = options || {};\n\t\tmerge = options.merger || helpers._merger;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!helpers.isObject(source)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tkeys = Object.keys(source);\n\t\t\tfor (k = 0, klen = keys.length; k < klen; ++k) {\n\t\t\t\tmerge(keys[k], target, source, options);\n\t\t\t}\n\t\t}\n\n\t\treturn target;\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @returns {Object} The `target` object.\n\t */\n\tmergeIf: function(target, source) {\n\t\treturn helpers.merge(target, source, {merger: helpers._mergerIf});\n\t},\n\n\t/**\n\t * Applies the contents of two or more objects together into the first object.\n\t * @param {Object} target - The target object in which all objects are merged into.\n\t * @param {Object} arg1 - Object containing additional properties to merge in target.\n\t * @param {Object} argN - Additional objects containing properties to merge in target.\n\t * @returns {Object} The `target` object.\n\t */\n\textend: function(target) {\n\t\tvar setFn = function(value, key) {\n\t\t\ttarget[key] = value;\n\t\t};\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n\t\t\thelpers.each(arguments[i], setFn);\n\t\t}\n\t\treturn target;\n\t},\n\n\t/**\n\t * Basic javascript inheritance based on the model created in Backbone.js\n\t */\n\tinherits: function(extensions) {\n\t\tvar me = this;\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\n\t\t\treturn me.apply(this, arguments);\n\t\t};\n\n\t\tvar Surrogate = function() {\n\t\t\tthis.constructor = ChartElement;\n\t\t};\n\n\t\tSurrogate.prototype = me.prototype;\n\t\tChartElement.prototype = new Surrogate();\n\t\tChartElement.extend = helpers.inherits;\n\n\t\tif (extensions) {\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\n\t\t}\n\n\t\tChartElement.__super__ = me.prototype;\n\t\treturn ChartElement;\n\t}\n};\n\nmodule.exports = helpers;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nhelpers.callCallback = helpers.callback;\n\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.indexOf = function(array, item, fromIndex) {\n\treturn Array.prototype.indexOf.call(array, item, fromIndex);\n};\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n"]},"metadata":{},"sourceType":"script"}