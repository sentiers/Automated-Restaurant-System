{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\.git\\\\asdf\\\\Source Files\\\\src\\\\components\\\\common\\\\SmallStats.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport shortid from \"shortid\";\nimport { Card, CardBody } from \"shards-react\";\nimport Chart from \"../../utils/chart\";\n\nclass SmallStats extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    const chartOptions = { ...{\n        maintainAspectRatio: true,\n        responsive: true,\n        legend: {\n          display: false\n        },\n        tooltips: {\n          enabled: false,\n          custom: false\n        },\n        elements: {\n          point: {\n            radius: 0\n          },\n          line: {\n            tension: 0.33\n          }\n        },\n        scales: {\n          xAxes: [{\n            gridLines: false,\n            ticks: {\n              display: false\n            }\n          }],\n          yAxes: [{\n            gridLines: false,\n            scaleLabel: false,\n            ticks: {\n              display: false,\n              isplay: false,\n              // Avoid getting the graph line cut of at the top of the canvas.\n              // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\n              suggestedMax: Math.max(...this.props.chartData[0].data) + 1\n            }\n          }]\n        }\n      },\n      ...this.props.chartOptions\n    };\n    const chartConfig = { ...{\n        type: \"line\",\n        data: { ...{\n            labels: this.props.chartLabels\n          },\n          ...{\n            datasets: this.props.chartData\n          }\n        },\n        options: chartOptions\n      },\n      ...this.props.chartConfig\n    };\n    new Chart(this.canvasRef.current, chartConfig);\n  }\n\n  render() {\n    const {\n      variation,\n      label,\n      value,\n      percentage,\n      increase\n    } = this.props;\n    const cardClasses = classNames(\"stats-small\", variation && \"stats-small--\".concat(variation));\n    const cardBodyClasses = classNames(variation === \"1\" ? \"p-0 d-flex\" : \"px-0 pb-0\");\n    const innerWrapperClasses = classNames(\"d-flex\", variation === \"1\" ? \"flex-column m-auto\" : \"px-3\");\n    const dataFieldClasses = classNames(\"stats-small__data\", variation === \"1\" && \"text-center\");\n    const labelClasses = classNames(\"stats-small__label\", \"text-uppercase\", variation !== \"1\" && \"mb-1\");\n    const valueClasses = classNames(\"stats-small__value\", \"count\", variation === \"1\" ? \"my-3\" : \"m-0\");\n    const innerDataFieldClasses = classNames(\"stats-small__data\", variation !== \"1\" && \"text-right align-items-center\");\n    const percentageClasses = classNames(\"stats-small__percentage\", \"stats-small__percentage--\".concat(increase ? \"increase\" : \"decrease\"));\n    const canvasHeight = variation === \"1\" ? 120 : 60;\n    return /*#__PURE__*/React.createElement(Card, {\n      small: true,\n      className: cardClasses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      className: cardBodyClasses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: innerWrapperClasses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: dataFieldClasses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: labelClasses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }\n    }, label), /*#__PURE__*/React.createElement(\"h6\", {\n      className: valueClasses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }, value)), /*#__PURE__*/React.createElement(\"div\", {\n      className: innerDataFieldClasses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: percentageClasses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }, percentage))), /*#__PURE__*/React.createElement(\"canvas\", {\n      height: canvasHeight,\n      ref: this.canvasRef,\n      className: \"stats-small-\".concat(shortid()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nSmallStats.propTypes = {\n  /**\n   * The Small Stats variation.\n   */\n  variation: PropTypes.string,\n\n  /**\n   * The label.\n   */\n  label: PropTypes.string,\n\n  /**\n   * The value.\n   */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The percentage number or string.\n   */\n  percentage: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Whether is a value increase, or not.\n   */\n  increase: PropTypes.bool,\n\n  /**\n   * The Chart.js configuration object.\n   */\n  chartConfig: PropTypes.object,\n\n  /**\n   * The Chart.js options object.\n   */\n  chartOptions: PropTypes.object,\n\n  /**\n   * The chart data.\n   */\n  chartData: PropTypes.array.isRequired,\n\n  /**\n   * The chart labels.\n   */\n  chartLabels: PropTypes.array\n};\nSmallStats.defaultProps = {\n  increase: true,\n  percentage: 0,\n  value: 0,\n  label: \"Label\",\n  chartOptions: Object.create(null),\n  chartConfig: Object.create(null),\n  chartData: [],\n  chartLabels: []\n};\nexport default SmallStats;","map":{"version":3,"sources":["C:/Users/Administrator/.git/asdf/Source Files/src/components/common/SmallStats.js"],"names":["React","PropTypes","classNames","shortid","Card","CardBody","Chart","SmallStats","Component","constructor","props","canvasRef","createRef","componentDidMount","chartOptions","maintainAspectRatio","responsive","legend","display","tooltips","enabled","custom","elements","point","radius","line","tension","scales","xAxes","gridLines","ticks","yAxes","scaleLabel","isplay","suggestedMax","Math","max","chartData","data","chartConfig","type","labels","chartLabels","datasets","options","current","render","variation","label","value","percentage","increase","cardClasses","cardBodyClasses","innerWrapperClasses","dataFieldClasses","labelClasses","valueClasses","innerDataFieldClasses","percentageClasses","canvasHeight","propTypes","string","oneOfType","number","bool","object","array","isRequired","defaultProps","Object","create"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport shortid from \"shortid\";\nimport { Card, CardBody } from \"shards-react\";\n\nimport Chart from \"../../utils/chart\";\n\nclass SmallStats extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const chartOptions = {\n      ...{\n        maintainAspectRatio: true,\n        responsive: true,\n        legend: {\n          display: false\n        },\n        tooltips: {\n          enabled: false,\n          custom: false\n        },\n        elements: {\n          point: {\n            radius: 0\n          },\n          line: {\n            tension: 0.33\n          }\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: false,\n              ticks: {\n                display: false\n              }\n            }\n          ],\n          yAxes: [\n            {\n              gridLines: false,\n              scaleLabel: false,\n              ticks: {\n                display: false,\n                isplay: false,\n                // Avoid getting the graph line cut of at the top of the canvas.\n                // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\n                suggestedMax: Math.max(...this.props.chartData[0].data) + 1\n              }\n            }\n          ]\n        }\n      },\n      ...this.props.chartOptions\n    };\n\n    const chartConfig = {\n      ...{\n        type: \"line\",\n        data: {\n          ...{\n            labels: this.props.chartLabels\n          },\n          ...{\n            datasets: this.props.chartData\n          }\n        },\n        options: chartOptions\n      },\n      ...this.props.chartConfig\n    };\n\n    new Chart(this.canvasRef.current, chartConfig);\n  }\n\n  render() {\n    const { variation, label, value, percentage, increase } = this.props;\n\n    const cardClasses = classNames(\n      \"stats-small\",\n      variation && `stats-small--${variation}`\n    );\n\n    const cardBodyClasses = classNames(\n      variation === \"1\" ? \"p-0 d-flex\" : \"px-0 pb-0\"\n    );\n\n    const innerWrapperClasses = classNames(\n      \"d-flex\",\n      variation === \"1\" ? \"flex-column m-auto\" : \"px-3\"\n    );\n\n    const dataFieldClasses = classNames(\n      \"stats-small__data\",\n      variation === \"1\" && \"text-center\"\n    );\n\n    const labelClasses = classNames(\n      \"stats-small__label\",\n      \"text-uppercase\",\n      variation !== \"1\" && \"mb-1\"\n    );\n\n    const valueClasses = classNames(\n      \"stats-small__value\",\n      \"count\",\n      variation === \"1\" ? \"my-3\" : \"m-0\"\n    );\n\n    const innerDataFieldClasses = classNames(\n      \"stats-small__data\",\n      variation !== \"1\" && \"text-right align-items-center\"\n    );\n\n    const percentageClasses = classNames(\n      \"stats-small__percentage\",\n      `stats-small__percentage--${increase ? \"increase\" : \"decrease\"}`\n    );\n\n    const canvasHeight = variation === \"1\" ? 120 : 60;\n\n    return (\n      <Card small className={cardClasses}>\n        <CardBody className={cardBodyClasses}>\n          <div className={innerWrapperClasses}>\n            <div className={dataFieldClasses}>\n              <span className={labelClasses}>{label}</span>\n              <h6 className={valueClasses}>{value}</h6>\n            </div>\n            <div className={innerDataFieldClasses}>\n              <span className={percentageClasses}>{percentage}</span>\n            </div>\n          </div>\n          <canvas\n            height={canvasHeight}\n            ref={this.canvasRef}\n            className={`stats-small-${shortid()}`}\n          />\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nSmallStats.propTypes = {\n  /**\n   * The Small Stats variation.\n   */\n  variation: PropTypes.string,\n  /**\n   * The label.\n   */\n  label: PropTypes.string,\n  /**\n   * The value.\n   */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The percentage number or string.\n   */\n  percentage: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Whether is a value increase, or not.\n   */\n  increase: PropTypes.bool,\n  /**\n   * The Chart.js configuration object.\n   */\n  chartConfig: PropTypes.object,\n  /**\n   * The Chart.js options object.\n   */\n  chartOptions: PropTypes.object,\n  /**\n   * The chart data.\n   */\n  chartData: PropTypes.array.isRequired,\n  /**\n   * The chart labels.\n   */\n  chartLabels: PropTypes.array\n};\n\nSmallStats.defaultProps = {\n  increase: true,\n  percentage: 0,\n  value: 0,\n  label: \"Label\",\n  chartOptions: Object.create(null),\n  chartConfig: Object.create(null),\n  chartData: [],\n  chartLabels: []\n};\n\nexport default SmallStats;\n"]},"metadata":{},"sourceType":"module"}