{"ast":null,"code":"'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('line', {\n  showLines: true,\n  spanGaps: false,\n  hover: {\n    mode: 'label'\n  },\n  scales: {\n    xAxes: [{\n      type: 'category',\n      id: 'x-axis-0'\n    }],\n    yAxes: [{\n      type: 'linear',\n      id: 'y-axis-0'\n    }]\n  }\n});\n\nmodule.exports = function (Chart) {\n  function lineEnabled(dataset, options) {\n    return helpers.valueOrDefault(dataset.showLine, options.showLines);\n  }\n\n  Chart.controllers.line = Chart.DatasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function (reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var options = me.chart.options;\n      var lineElementOptions = options.elements.line;\n      var scale = me.getScaleForId(meta.yAxisID);\n      var i, ilen, custom;\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, options); // Update Line\n\n      if (showLine) {\n        custom = line.custom || {}; // Compatibility: If the properties are defined with only the old name, use those values\n\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = {\n          // Appearance\n          // The default behavior of lines is to break at null values, according\n          // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n          // This option gives lines the ability to span gaps\n          spanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : dataset.backgroundColor || lineElementOptions.backgroundColor,\n          borderWidth: custom.borderWidth ? custom.borderWidth : dataset.borderWidth || lineElementOptions.borderWidth,\n          borderColor: custom.borderColor ? custom.borderColor : dataset.borderColor || lineElementOptions.borderColor,\n          borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : dataset.borderCapStyle || lineElementOptions.borderCapStyle,\n          borderDash: custom.borderDash ? custom.borderDash : dataset.borderDash || lineElementOptions.borderDash,\n          borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : dataset.borderDashOffset || lineElementOptions.borderDashOffset,\n          borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : dataset.borderJoinStyle || lineElementOptions.borderJoinStyle,\n          fill: custom.fill ? custom.fill : dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill,\n          steppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n          cubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode)\n        };\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    getPointBackgroundColor: function (point, index) {\n      var backgroundColor = this.chart.options.elements.point.backgroundColor;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (custom.backgroundColor) {\n        backgroundColor = custom.backgroundColor;\n      } else if (dataset.pointBackgroundColor) {\n        backgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n      } else if (dataset.backgroundColor) {\n        backgroundColor = dataset.backgroundColor;\n      }\n\n      return backgroundColor;\n    },\n    getPointBorderColor: function (point, index) {\n      var borderColor = this.chart.options.elements.point.borderColor;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (custom.borderColor) {\n        borderColor = custom.borderColor;\n      } else if (dataset.pointBorderColor) {\n        borderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n      } else if (dataset.borderColor) {\n        borderColor = dataset.borderColor;\n      }\n\n      return borderColor;\n    },\n    getPointBorderWidth: function (point, index) {\n      var borderWidth = this.chart.options.elements.point.borderWidth;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (!isNaN(custom.borderWidth)) {\n        borderWidth = custom.borderWidth;\n      } else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\n        borderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n      } else if (!isNaN(dataset.borderWidth)) {\n        borderWidth = dataset.borderWidth;\n      }\n\n      return borderWidth;\n    },\n    getPointRotation: function (point, index) {\n      var pointRotation = this.chart.options.elements.point.rotation;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (!isNaN(custom.rotation)) {\n        pointRotation = custom.rotation;\n      } else if (!isNaN(dataset.pointRotation) || helpers.isArray(dataset.pointRotation)) {\n        pointRotation = helpers.valueAtIndexOrDefault(dataset.pointRotation, index, pointRotation);\n      }\n\n      return pointRotation;\n    },\n    updateElement: function (point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var pointOptions = me.chart.options.elements.point;\n      var x, y; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.radius !== undefined && dataset.pointRadius === undefined) {\n        dataset.pointRadius = dataset.radius;\n      }\n\n      if (dataset.hitRadius !== undefined && dataset.pointHitRadius === undefined) {\n        dataset.pointHitRadius = dataset.hitRadius;\n      }\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n        pointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n        rotation: me.getPointRotation(point, index),\n        backgroundColor: me.getPointBackgroundColor(point, index),\n        borderColor: me.getPointBorderColor(point, index),\n        borderWidth: me.getPointBorderWidth(point, index),\n        tension: meta.dataset._model ? meta.dataset._model.tension : 0,\n        steppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n        // Tooltip\n        hitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n      };\n    },\n    calculatePointY: function (value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function () {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, point, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (meta.dataset._model.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n        helpers.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          point = points[i];\n          model = point._model;\n          controlPoints = helpers.splineCurve(helpers.previousItem(points, i)._model, model, helpers.nextItem(points, i)._model, meta.dataset._model.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (me.chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n          model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n          model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n          model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n        }\n      }\n    },\n    draw: function () {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n    setHoverStyle: function (element) {\n      // Point\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n      model.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n    }\n  });\n};","map":{"version":3,"sources":["C:/Users/Administrator/.git/asdf/Source Files/node_modules/chart.js/src/controllers/controller.line.js"],"names":["defaults","require","elements","helpers","_set","showLines","spanGaps","hover","mode","scales","xAxes","type","id","yAxes","module","exports","Chart","lineEnabled","dataset","options","valueOrDefault","showLine","controllers","line","DatasetController","extend","datasetElementType","Line","dataElementType","Point","update","reset","me","meta","getMeta","points","data","chart","lineElementOptions","scale","getScaleForId","yAxisID","i","ilen","custom","getDataset","tension","undefined","lineTension","_scale","_datasetIndex","index","_children","_model","backgroundColor","borderWidth","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","fill","steppedLine","stepped","cubicInterpolationMode","pivot","length","updateElement","updateBezierControlPoints","getPointBackgroundColor","point","pointBackgroundColor","valueAtIndexOrDefault","getPointBorderColor","pointBorderColor","getPointBorderWidth","isNaN","pointBorderWidth","isArray","getPointRotation","pointRotation","rotation","datasetIndex","value","yScale","xScale","xAxisID","pointOptions","x","y","radius","pointRadius","hitRadius","pointHitRadius","getPixelForValue","NaN","getBasePixel","calculatePointY","_xScale","_yScale","_index","skip","pointStyle","sumPos","sumNeg","ds","dsMeta","stacked","datasets","getDatasetMeta","isDatasetVisible","stackedRightValue","Number","getRightValue","rightValue","area","chartArea","model","controlPoints","filter","pt","capControlPoint","min","max","Math","splineCurveMonotone","splineCurve","previousItem","nextItem","controlPointPreviousX","previous","controlPointPreviousY","controlPointNextX","next","controlPointNextY","capBezierPoints","left","right","top","bottom","draw","halfBorderWidth","canvas","clipArea","ctx","unclipArea","setHoverStyle","element","$previousStyle","hoverBackgroundColor","pointHoverBackgroundColor","getHoverColor","hoverBorderColor","pointHoverBorderColor","hoverBorderWidth","pointHoverBorderWidth","hoverRadius","pointHoverRadius"],"mappings":"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","sourcesContent":["'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('line', {\n\tshowLines: true,\n\tspanGaps: false,\n\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tid: 'x-axis-0'\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tfunction lineEnabled(dataset, options) {\n\t\treturn helpers.valueOrDefault(dataset.showLine, options.showLines);\n\t}\n\n\tChart.controllers.line = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data || [];\n\t\t\tvar options = me.chart.options;\n\t\t\tvar lineElementOptions = options.elements.line;\n\t\t\tvar scale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar i, ilen, custom;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar showLine = lineEnabled(dataset, options);\n\n\t\t\t// Update Line\n\t\t\tif (showLine) {\n\t\t\t\tcustom = line.custom || {};\n\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t\t}\n\n\t\t\t\t// Utility\n\t\t\t\tline._scale = scale;\n\t\t\t\tline._datasetIndex = me.index;\n\t\t\t\t// Data\n\t\t\t\tline._children = points;\n\t\t\t\t// Model\n\t\t\t\tline._model = {\n\t\t\t\t\t// Appearance\n\t\t\t\t\t// The default behavior of lines is to break at null values, according\n\t\t\t\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n\t\t\t\t\t// This option gives lines the ability to span gaps\n\t\t\t\t\tspanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tsteppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n\t\t\t\t\tcubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\n\t\t\t\t};\n\n\t\t\t\tline.pivot();\n\t\t\t}\n\n\t\t\t// Update Points\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(points[i], i, reset);\n\t\t\t}\n\n\t\t\tif (showLine && line._model.tension !== 0) {\n\t\t\t\tme.updateBezierControlPoints();\n\t\t\t}\n\n\t\t\t// Now pivot the point for animation\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tpoints[i].pivot();\n\t\t\t}\n\t\t},\n\n\t\tgetPointBackgroundColor: function(point, index) {\n\t\t\tvar backgroundColor = this.chart.options.elements.point.backgroundColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.backgroundColor) {\n\t\t\t\tbackgroundColor = custom.backgroundColor;\n\t\t\t} else if (dataset.pointBackgroundColor) {\n\t\t\t\tbackgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n\t\t\t} else if (dataset.backgroundColor) {\n\t\t\t\tbackgroundColor = dataset.backgroundColor;\n\t\t\t}\n\n\t\t\treturn backgroundColor;\n\t\t},\n\n\t\tgetPointBorderColor: function(point, index) {\n\t\t\tvar borderColor = this.chart.options.elements.point.borderColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.borderColor) {\n\t\t\t\tborderColor = custom.borderColor;\n\t\t\t} else if (dataset.pointBorderColor) {\n\t\t\t\tborderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n\t\t\t} else if (dataset.borderColor) {\n\t\t\t\tborderColor = dataset.borderColor;\n\t\t\t}\n\n\t\t\treturn borderColor;\n\t\t},\n\n\t\tgetPointBorderWidth: function(point, index) {\n\t\t\tvar borderWidth = this.chart.options.elements.point.borderWidth;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (!isNaN(custom.borderWidth)) {\n\t\t\t\tborderWidth = custom.borderWidth;\n\t\t\t} else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\n\t\t\t\tborderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n\t\t\t} else if (!isNaN(dataset.borderWidth)) {\n\t\t\t\tborderWidth = dataset.borderWidth;\n\t\t\t}\n\n\t\t\treturn borderWidth;\n\t\t},\n\n\t\tgetPointRotation: function(point, index) {\n\t\t\tvar pointRotation = this.chart.options.elements.point.rotation;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (!isNaN(custom.rotation)) {\n\t\t\t\tpointRotation = custom.rotation;\n\t\t\t} else if (!isNaN(dataset.pointRotation) || helpers.isArray(dataset.pointRotation)) {\n\t\t\t\tpointRotation = helpers.valueAtIndexOrDefault(dataset.pointRotation, index, pointRotation);\n\t\t\t}\n\t\t\treturn pointRotation;\n\t\t},\n\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar value = dataset.data[index];\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar pointOptions = me.chart.options.elements.point;\n\t\t\tvar x, y;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n\t\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\n\t\t\t// Utility\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._datasetIndex = datasetIndex;\n\t\t\tpoint._index = index;\n\n\t\t\t// Desired view properties\n\t\t\tpoint._model = {\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\t// Appearance\n\t\t\t\tradius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n\t\t\t\tpointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n\t\t\t\trotation: me.getPointRotation(point, index),\n\t\t\t\tbackgroundColor: me.getPointBackgroundColor(point, index),\n\t\t\t\tborderColor: me.getPointBorderColor(point, index),\n\t\t\t\tborderWidth: me.getPointBorderWidth(point, index),\n\t\t\t\ttension: meta.dataset._model ? meta.dataset._model.tension : 0,\n\t\t\t\tsteppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n\t\t\t\t// Tooltip\n\t\t\t\thitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n\t\t\t};\n\t\t},\n\n\t\tcalculatePointY: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar sumPos = 0;\n\t\t\tvar sumNeg = 0;\n\t\t\tvar i, ds, dsMeta;\n\n\t\t\tif (yScale.options.stacked) {\n\t\t\t\tfor (i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tds = chart.data.datasets[i];\n\t\t\t\t\tdsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\t\t\t\t\t\tif (stackedRightValue < 0) {\n\t\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsumPos += stackedRightValue || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar rightValue = Number(yScale.getRightValue(value));\n\t\t\t\tif (rightValue < 0) {\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\n\t\t\t\t}\n\t\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\n\t\t\t}\n\n\t\t\treturn yScale.getPixelForValue(value);\n\t\t},\n\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar area = me.chart.chartArea;\n\t\t\tvar points = (meta.data || []);\n\t\t\tvar i, ilen, point, model, controlPoints;\n\n\t\t\t// Only consider points that are drawn in case the spanGaps option is used\n\t\t\tif (meta.dataset._model.spanGaps) {\n\t\t\t\tpoints = points.filter(function(pt) {\n\t\t\t\t\treturn !pt._model.skip;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction capControlPoint(pt, min, max) {\n\t\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t\t}\n\n\t\t\tif (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n\t\t\t\thelpers.splineCurveMonotone(points);\n\t\t\t} else {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tpoint = points[i];\n\t\t\t\t\tmodel = point._model;\n\t\t\t\t\tcontrolPoints = helpers.splineCurve(\n\t\t\t\t\t\thelpers.previousItem(points, i)._model,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\thelpers.nextItem(points, i)._model,\n\t\t\t\t\t\tmeta.dataset._model.tension\n\t\t\t\t\t);\n\t\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\n\t\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\n\t\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\n\t\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.chart.options.elements.line.capBezierPoints) {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tmodel = points[i]._model;\n\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data || [];\n\t\t\tvar area = chart.chartArea;\n\t\t\tvar ilen = points.length;\n\t\t\tvar halfBorderWidth;\n\t\t\tvar i = 0;\n\n\t\t\tif (lineEnabled(me.getDataset(), chart.options)) {\n\t\t\t\thalfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n\n\t\t\t\thelpers.canvas.clipArea(chart.ctx, {\n\t\t\t\t\tleft: area.left,\n\t\t\t\t\tright: area.right,\n\t\t\t\t\ttop: area.top - halfBorderWidth,\n\t\t\t\t\tbottom: area.bottom + halfBorderWidth\n\t\t\t\t});\n\n\t\t\t\tmeta.dataset.draw();\n\n\t\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\t\t\t}\n\n\t\t\t// Draw the points\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tpoints[i].draw(area);\n\t\t\t}\n\t\t},\n\n\t\tsetHoverStyle: function(element) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar model = element._model;\n\n\t\t\telement.$previousStyle = {\n\t\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\t\tborderColor: model.borderColor,\n\t\t\t\tborderWidth: model.borderWidth,\n\t\t\t\tradius: model.radius\n\t\t\t};\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t\tmodel.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t},\n\t});\n};\n"]},"metadata":{},"sourceType":"script"}