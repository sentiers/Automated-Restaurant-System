{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\\\uC870\\uD604\\uC9C0\\\\Desktop\\\\Automated-Restaurant-System\\\\src\\\\components\\\\layout\\\\MainNavbar\\\\MainNavbar.js\";\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { Container, Navbar } from \"shards-react\";\nimport NavbarSearch from \"./NavbarSearch\";\nimport NavbarNav from \"./NavbarNav/NavbarNav\";\nimport NavbarToggle from \"./NavbarToggle\";\n\nvar MainNavbar = function MainNavbar(_ref) {\n  var layout = _ref.layout,\n      stickyTop = _ref.stickyTop;\n  var classes = classNames(\"main-navbar\", \"bg-white\", stickyTop && \"sticky-top\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    className: \"p-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    type: \"light\",\n    className: \"align-items-stretch flex-md-nowrap p-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NavbarSearch, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(NavbarNav, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(NavbarToggle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }))));\n};\n\nMainNavbar.propTypes = {\n  /**\r\n   * The layout type where the MainNavbar is used.\r\n   */\n  layout: PropTypes.string,\n\n  /**\r\n   * Whether the main navbar is sticky to the top, or not.\r\n   */\n  stickyTop: PropTypes.bool\n};\nMainNavbar.defaultProps = {\n  stickyTop: true\n};\nexport default MainNavbar;","map":{"version":3,"sources":["C:/Users/조현지/Desktop/Automated-Restaurant-System/src/components/layout/MainNavbar/MainNavbar.js"],"names":["React","PropTypes","classNames","Container","Navbar","NavbarSearch","NavbarNav","NavbarToggle","MainNavbar","layout","stickyTop","classes","propTypes","string","bool","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,cAAlC;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAA2B;AAAA,MAAxBC,MAAwB,QAAxBA,MAAwB;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;AAC5C,MAAMC,OAAO,GAAGT,UAAU,CACxB,aADwB,EAExB,UAFwB,EAGxBQ,SAAS,IAAI,YAHW,CAA1B;AAMA,sBACE;AAAK,IAAA,SAAS,EAAEC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,OAAb;AAAqB,IAAA,SAAS,EAAC,wCAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,CADF,CADF;AAWD,CAlBD;;AAoBAH,UAAU,CAACI,SAAX,GAAuB;AACrB;AACF;AACA;AACEH,EAAAA,MAAM,EAAER,SAAS,CAACY,MAJG;;AAKrB;AACF;AACA;AACEH,EAAAA,SAAS,EAAET,SAAS,CAACa;AARA,CAAvB;AAWAN,UAAU,CAACO,YAAX,GAA0B;AACxBL,EAAAA,SAAS,EAAE;AADa,CAA1B;AAIA,eAAeF,UAAf","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport { Container, Navbar } from \"shards-react\";\r\n\r\nimport NavbarSearch from \"./NavbarSearch\";\r\nimport NavbarNav from \"./NavbarNav/NavbarNav\";\r\nimport NavbarToggle from \"./NavbarToggle\";\r\n\r\nconst MainNavbar = ({ layout, stickyTop }) => {\r\n  const classes = classNames(\r\n    \"main-navbar\",\r\n    \"bg-white\",\r\n    stickyTop && \"sticky-top\"\r\n  );\r\n\r\n  return (\r\n    <div className={classes}>\r\n      <Container className=\"p-0\">\r\n        <Navbar type=\"light\" className=\"align-items-stretch flex-md-nowrap p-0\">\r\n          <NavbarSearch />\r\n          <NavbarNav />\r\n          <NavbarToggle />\r\n        </Navbar>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nMainNavbar.propTypes = {\r\n  /**\r\n   * The layout type where the MainNavbar is used.\r\n   */\r\n  layout: PropTypes.string,\r\n  /**\r\n   * Whether the main navbar is sticky to the top, or not.\r\n   */\r\n  stickyTop: PropTypes.bool\r\n};\r\n\r\nMainNavbar.defaultProps = {\r\n  stickyTop: true\r\n};\r\n\r\nexport default MainNavbar;\r\n"]},"metadata":{},"sourceType":"module"}